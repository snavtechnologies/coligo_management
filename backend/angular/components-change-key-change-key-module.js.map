{"version":3,"sources":["webpack:///./src/app/components/change-key/change-key.component.html","webpack:///./src/app/components/change-key/change-key.component.scss","webpack:///./src/app/components/change-key/change-key.component.ts","webpack:///./src/app/components/change-key/change-key.module.ts","webpack:///./src/app/components/change-key/change-key.routing.module.ts"],"names":[],"mappings":"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","file":"components-change-key-change-key-module.js","sourcesContent":["module.exports = \"<mat-card class=\\\"card-credentials\\\">\\n  <form\\n   [formGroup]=\\\"form\\\"\\n   (ngSubmit)=\\\"submit()\\\"\\n   [ngStyle]=\\\"{ 'background-color': this.color }\\\">\\n\\n    <app-html-components\\n      [html_data_to_pass]=\\\"form_html_elements\\\"\\n      [form_data]=\\\"this.form\\\">\\n\\n      <ng-template #standardTemplate let-item>\\n\\n        <span *ngIf=\\\"item == 'custom_element_admin_password'\\\">\\n          <mat-form-field>\\n            <div style=\\\"margin-top: 10px\\\">\\n              <input\\n               (focus)=true\\n               formControlName=\\\"admin_password\\\"\\n               id=\\\"admin_password\\\"\\n               matInput \\n               [style.width.%]=\\\"94\\\" \\n               [type]=\\\"adminPasswdCredentialsService.is_visible() ? 'text' : 'password'\\\"\\n               ngModel  \\n               required\\n               placeholder=\\\"Enter Admin Password\\\">\\n               <i (click)=\\\"adminPasswdCredentialsService.toggle_visibility()\\\" class=\\\"material-icons\\\">{{adminPasswdCredentialsService.get_icon_visibility()}}</i>\\n            </div>\\n          </mat-form-field>\\n        </span>\\n\\n        <span *ngIf=\\\"item == 'custom_element_new_password'\\\">\\n          <mat-form-field>\\n            <div style=\\\"margin-top: 10px\\\">\\n              <input\\n               formControlName=\\\"new_password\\\"\\n               id=\\\"new_password\\\"\\n               matInput \\n               [style.width.%]=\\\"94\\\" \\n               [type]=\\\"newPasswdCredentialsService.is_visible()? 'text' : 'password'\\\" \\n               ngModel  \\n               required\\n               placeholder=\\\"Give a New Password\\\">\\n               <i (click)=\\\"newPasswdCredentialsService.toggle_visibility()\\\" class=\\\"material-icons\\\">{{newPasswdCredentialsService.get_icon_visibility()}}</i>\\n            </div>\\n          </mat-form-field>\\n        </span>\\n\\n      </ng-template>\\n\\n    </app-html-components>\\n    <button type=\\\"submit\\\" name=\\\"credentials_submit_btn\\\" style=\\\"width: 100%;margin-top: 2%\\\" class=\\\"col-md-12 btn btn-primary btn-lg\\\"  mat-raised-button>Submit</button>\\n\\n  </form>\\n</mat-card>\\n\"","module.exports = \".card-credentials {\\n  width: 60%;\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 5%; }\\n\\n.material-icons {\\n  cursor: pointer; }\\n\"","import { ChangeDetectionStrategy, Component, Inject, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthData } from 'app/common_interfaces/auth-data.model';\nimport { DBOperation } from 'app/common_interfaces/db_operation.model';\nimport { HtmlComponentFinal } from 'app/common_interfaces/html-component.model';\nimport { AuthService } from 'app/services/auth.service';\nimport { BasicFunctionsService } from 'app/services/basic-functions.service';\n\nimport { CredentialsService } from 'app/services/credentials.service';\nimport { EncryptionService } from 'app/services/encryption.service';\nimport { ErrorService } from 'app/services/error.service';\nimport { NotificationserviceService } from 'app/services/notificationservice.service';\nimport { PostingService } from 'app/services/posting.service';\nimport { SpinnerService } from 'app/services/spinner.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-change-key-credentials',\n  templateUrl: './change-key.component.html',\n  styleUrls: ['./change-key.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {provide: 'adminPasswdCredentialsService', useClass: CredentialsService},\n    {provide: 'newPasswdCredentialsService', useClass: CredentialsService}\n  ]\n})\n\nexport class ChangeKeyComponent implements OnDestroy {\n  color: string = \"#EEEEEE\";\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute, \n    @Inject('adminPasswdCredentialsService') public adminPasswdCredentialsService: CredentialsService, \n    @Inject('newPasswdCredentialsService') public newPasswdCredentialsService: CredentialsService,\n    private basicFunctionsService: BasicFunctionsService,\n    private authService: AuthService,\n    private errorService: ErrorService,\n    private encryptionService: EncryptionService,\n    private postingService: PostingService,\n    private spinner: SpinnerService,\n    private notification: NotificationserviceService\n    ) {}\n\n  form: FormGroup = this.formBuilder.group(\n    {\n      admin_password: [''],\n      new_password: ['']\n    }\n  )\n\n  form_html_elements: HtmlComponentFinal[] = [\n    {\n      no_of_elements_in_a_row: '1',\n      color: '',\n      need_card: true,\n      table_view: false,\n      card_label: 'Change Password',\n      elements: [\n        {\n          custom_element: true,\n          custom_element_identification: \"custom_element_admin_password\",\n          label: \"Admin Password\",\n          name: \"admin_password\",\n          need_block: true,\n          is_element_required: true,\n        },\n        {\n          custom_element: true,\n          custom_element_identification: \"custom_element_new_password\",\n          label: \"New Password\",\n          name: \"new_password\",\n          need_block: true,\n          is_element_required: true,\n        },\n      ]\n    }\n  ]  \n\n  submit() {\n    if (!this.basicFunctionsService.is_valid(this.form, document))\n      return;\n    \n    const authData: AuthData = {\n      username: this.authService.getUsernameSession(),\n      password: this.form.get('admin_password').value\n    }\n\n    this.subscriptions.add(this.authService.comparePassword(authData)\n      .subscribe(() => {\n        this.spinner.trig_spin(true);\n        const encrypted_password = this.encryptionService.encrypt(this.form.get('new_password').value);\n        this.change_password(encrypted_password);\n      }, \n      error => this.errorService.handle_error(error))\n    );\n  }\n\n  change_password(password: string) {\n    const data = {\n      data_to_update: { password: password},\n      condition: {\n        username: this.route.snapshot.paramMap.get('username')\n      }\n    }\n\n    const update_data: DBOperation = {\n      table_name: 'employee_info',\n      data: data,\n      db: this.authService.getHeadDatabaseSession()\n    }\n\n    this.subscriptions.add(this.postingService.do_simple_update_emp_info(update_data)\n      .subscribe(response => {\n        if (response.no_of_rows_updated[0] == 1) {\n          this.notification.openSnackBar('Password Changed', '', 'green-snackbar'); \n          this.form.reset();\n        }\n        else \n          this.notification.openSnackBar('Error in updating', '', 'red-snackbar');\n        \n        this.spinner.trig_spin(false);\n      },\n      error => {\n        this.errorService.handle_error(error);\n    }));\n\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AngularMaterialModule } from 'app/modules/angular-material/angular-material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentModule } from 'app/modules/component/component.module';\nimport {MatCardModule} from '@angular/material/card';\nimport { ChangeKeyRoutingModule } from './change-key.routing.module';\nimport { ChangeKeyComponent } from './change-key.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AngularMaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ComponentModule,\n    MatCardModule,\n    ChangeKeyRoutingModule\n  ],\n  declarations: [ChangeKeyComponent]\n})\nexport class ChangeKeyModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChangeKeyComponent } from './change-key.component';\n\nconst routes: Routes = [\n  {\n\n    path: '',\n    children: [ {\n      path: '',\n      component: ChangeKeyComponent\n  }]\n  }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChangeKeyRoutingModule { }\n"],"sourceRoot":""}